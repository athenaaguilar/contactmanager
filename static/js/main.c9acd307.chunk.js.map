{"version":3,"sources":["components/layouts/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","brand","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","bind","float","color","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onFormSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","onFormChange","defineProperty","target","_this$state2","onSubmit","layouts_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","completed","fetch","then","response","json","App","context_Provider","layouts_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9acd307.chunk.js","sourcesContent":["// static markup - no state - so we'll creat \"functional\" component\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  // destructuring\n  const { brand } = props;\n  return (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\n      <div className='container'>\n        <a href='/' className='navbar-brand'>\n          {brand}\n        </a>\n        <div>\n          <ul className='navbar-nav mr-auto'>\n            <li className='nav-item'>\n              <Link to='/' className='nav-link'>\n                <i className='fas fa-home' /> Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/add' className='nav-link'>\n                <i className='fas fa-plus' /> Add\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/about' className='nav-link'>\n                <i className='fas fa-question' /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  brand: 'Contact Manager Application'\n};\n\nHeader.propTypes = {\n  brand: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\n// \"global\" state are placed\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  // componentDidMount() {\n  //   axios\n  //     .get('http://jsonplaceholder.typicode.com/users')\n  //     .then(res => this.setState({ contacts: res.data }));\n  // }\n\n  async componentDidMount() {\n    const res = await axios.get('http://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\n// class-based component\nclass Contact extends Component {\n  state = {\n    showContactInfo: false // by default\n  };\n\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo }); // toggle true and false\n  };\n\n  // onDeleteClick = (id, dispatch) => {\n  //   axios\n  //     .delete(`http://jsonplaceholder.typicode.com/users/${id}`)\n  //     .then(res => dispatch({ type: 'DELETE_CONTACT', payload: id }));\n  // };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\n  };\n\n  render() {\n    // destruturing\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card card-body mb-3'>\n              <h4>\n                {name}{' '}\n                <i\n                  className='fas fa-caret-square-down fa-sm'\n                  onClick={this.onShowClick}\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  className='fas fa-trash fa-sm'\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                />{' '}\n                <Link to={`edit/${id}`}>\n                  <i\n                    className='fas fa-pencil-alt'\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className='list-group'>\n                  <li className='list-group-item'>Email: {email}</li>\n                  <li className='list-group-item'>Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n// one prop - contact\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className='display-4 mb-2'>\n                <span className='text-danger'>Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className='form-group'>\n      <label htmlFor='name'>{label}</label>\n      <input\n        name={name}\n        value={value}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        type={type}\n        onChange={onChange}\n      />\n      {error && <div className='invalid-feedback'>{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    // axios\n    //   .post('http://jsonplaceholder.typicode.com/users', newContact)\n    //   .then(res => dispatch({ type: 'ADD_CONTACT', payload: res.data }));\n\n    const res = await axios.post(\n      'http://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // clear state after submitting\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onFormChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>Add Contact</div>\n              <div className='card-body'>\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label='Name'\n                    name='name'\n                    value={name}\n                    placeholder='Enter Name...'\n                    onChange={this.onFormChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label='Email'\n                    name='email'\n                    value={email}\n                    placeholder='Enter Email...'\n                    type='email'\n                    onChange={this.onFormChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label='Phone'\n                    name='phone'\n                    value={phone}\n                    placeholder='Enter Phone...'\n                    onChange={this.onFormChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type='submit'\n                    value='Add Contact'\n                    className='btn btn-dark btn-block'\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `http://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onFormSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `http://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // clear state after submitting\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onFormChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>Edit Contact</div>\n              <div className='card-body'>\n                <form onSubmit={this.onFormSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label='Name'\n                    name='name'\n                    value={name}\n                    placeholder='Enter Name...'\n                    onChange={this.onFormChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label='Email'\n                    name='email'\n                    value={email}\n                    placeholder='Enter Email...'\n                    type='email'\n                    onChange={this.onFormChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label='Phone'\n                    name='phone'\n                    value={phone}\n                    placeholder='Enter Phone...'\n                    onChange={this.onFormChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type='submit'\n                    value='Update Contact'\n                    className='btn btn-dark btn-block'\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className='display-4'>About Contact Manager</h1>\n      <p className='lead'>Single app to manage contacts</p>\n      <p className='text-secondary'>Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className='display-4'>\n        <span className='text-danger  '>404</span> Page Not Found\n      </h1>\n      <p className='lead'>Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    completed: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          completed: data.completed\n        })\n      );\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n  // componentWillReceiveProps() {\n  //   console.log('componentWillReceiveProps...');\n  // }\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'something'\n  //   };\n  //   // return rather than calling setState\n  // }\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate...');\n  // }\n\n  render() {\n    const { title, completed } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        {completed ? <p>completed</p> : <p>Not yet completed</p>}\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","// main app component\nimport React from 'react';\n// react router dom\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// functional component\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className='App'>\n          <Header brand='Contact Manager' />\n          <div className='container'>\n            <Switch>\n              <Route exact path='/' component={Contacts} />\n              <Route exact path='/add' component={AddContact} />\n              <Route exact path='/edit/:id' component={EditContact} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/test' component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; // main app component to render\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}